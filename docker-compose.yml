version: '3.9'

services:
  product_service:
    build: 
      context: ./Product
    restart: always
    ports:
      - "8000:8000"
    volumes:
      - ./Product/app:/app
    env_file: 
      - ./.env
    depends_on:
      - db
      - zookeeper
      - kafka
      

  order_service:
    build: 
      context: ./Order
    restart: always
    ports:
      - "8001:8001"
    volumes:
      - ./Order/app:/app
    env_file: 
      - ./.env
    depends_on:
      - db
      - zookeeper
      - kafka

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    restart: always
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:2.8
    restart: always
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    env_file: 
      - ./.env
    depends_on:
      - zookeeper

  db:
    image: postgres
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data/
      - ./sql/create_db.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./sql/postgres.conf:/etc/postgresql.conf
    expose:
      - ${POSTGRES_PORT}
    env_file: 
      - ./.env

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - ${PORT}:80
    env_file: 
      - ./.env
    volumes:
      - ./nginx/nginx_config.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - product_service
      - order_service

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093

volumes:
  postgres-data:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local